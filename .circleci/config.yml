version: 2.1

orbs:
  slack: circleci/slack@3.3.0

executors:
  default:
    working_directory: ~/repo # default: ~/project
    docker:
      - image: circleci/ruby:2.6.6-node-browsers
        auth:
          username: renosys
          password: $DOCKERHUB_PASSWORD
        environment:
          # BUNDLE_PATH=/usr/local/bundle is set in the original docker image. Should be overwritten.
          # https://hub.docker.com/layers/circleci/ruby/2.6.6-node/images/sha256-371f81f654d9a2d5e3b71bbf3616ac076686358838bc123d27ba35ff6d8df321?context=explore
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
  extended:
    working_directory: ~/repo
    docker:
      - image: circleci/ruby:2.6.6-node-browsers
        auth:
          username: renosys
          password: $DOCKERHUB_PASSWORD
        environment:
          BUNDLE_PATH: vendor/bundle
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: root
      - image: circleci/postgres:9.6.2-alpine
        auth:
          username: renosys
          password: $DOCKERHUB_PASSWORD
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle-test

commands:
  restore_source_code:
    steps:
      - restore_cache:
          name: Restore source code cache
          keys:
            - v3-source-code-{{ .Environment.CIRCLE_SHA1 }}
            - v3-source-code-
  save_source_code:
    steps:
      - save_cache:
          key: v3-source-code-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/repo
  restore_node_dependencies:
    steps:
      - restore_cache:
          name: Restore node dependencies cache
          keys:
            - v3-node-dependencies-{{ checksum "yarn.lock" }}
            - v3-node-dependencies-
  install_node_dependencies:
    steps:
      - run:
          name: Install node dependencies
          command: yarn install --frozen-lockfile
  save_node_dependencies:
    steps:
      - save_cache:
          name: Save node dependencies cache
          key: v3-node-dependencies-{{ checksum "yarn.lock" }}
          paths:
            - ~/repo/node_modules
  restore_bundle_dependencies:
    steps:
      - restore_cache:
          name: Restore bundle dependencies cache
          keys:
            - v3-bundle-dependencies-{{ checksum "Gemfile.lock" }}
            - v3-bundle-dependencies-
  install_bundler:
    steps:
      - run:
          name: Install bundler
          command: |
            pwd # debug

            BUNDLER_VERSION=$(cat Gemfile.lock | tail -1 | tr -d " ")
            echo $BUNDLER_VERSION # debug
            gem install bundler:$BUNDLER_VERSION
  install_bundle_dependencies:
    steps:
      - run:
          name: Install bundle dependencies
          command: |
            pwd # debug

            bundle install --jobs=4 --retry=3
  save_bundle_dependencies:
    steps:
      - save_cache:
          key: v3-bundle-dependencies-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/repo/vendor/bundle
  build_frontend:
    steps:
      - run:
          name: Build frontend
          command: RAILS_ENV=production bin/rails assets:precompile --trace
  copy_application_yml:
    steps:
      - run:
          name: Copy application.yml.sample
          command: cp -p config/application.yml.sample config/application.yml
  wait_for_db_start_up:
    steps:
      - run:
          name: Wait for db start up
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 1m
  set_up_database:
    steps:
      - run:
          name: Set up database
          command: |
            pwd # debug (it's /home/circleci/repo and it's what's expected)
            echo $(cat Gemfile.lock | tail -1 | tr -d " ") # debug

            bin/rails db:create --trace
            bin/rails db:migrate --trace
  run_rubocop:
    steps:
      - run:
          name: Run rubocop
          command: bundle exec rubocop
  run_rspec:
    steps:
      - run:
          name: Run rspec
          command: bundle exec rspec --format progress --format RspecJunitFormatter -o test_results/rspec.xml
  run_eslint:
    steps:
      - run:
          name: Run eslint
          command: |
            pwd # debug (it's /home/circleci/repo and it's what's expected)

            yarn lint --format junit -o test_results/eslint.xml
  run_jest:
    steps:
      - run:
          name: Run jest
          command: yarn test --maxWorkers=2 --testResultsProcessor="jest-junit"
          environment:
            JEST_JUNIT_OUTPUT: ~/test_results/jest.xml
  run_e2e:
    steps:
      - run:
          name: Run e2e
          command: yarn test:e2e --maxWorkers=2 --testResultsProcessor="jest-junit"
          environment:
            JEST_JUNIT_OUTPUT: ~/test_results/jest.xml
  run_newman:
    steps:
      - run:
          name: Run newman
          command: yarn test:request
  startup_localhost:
    steps:
      - run:
          name: Startup localhost service for system test
          command: bin/rails s -p 3000 -b localhost
          background: true
  wait_for_localhost_start_up:
    steps:
      - run:
          name: Wait for localhost start up
          command: dockerize -wait http://localhost:3000 -timeout 10m
  generate_data:
    steps:
      - run:
          name: Generate test data
          command: bin/rails dev:generate_data

jobs:
  checkout_code:
    executor: default
    steps:
      - checkout
      - save_source_code
  node_dependencies:
    executor: default
    steps:
      - restore_source_code
      - restore_node_dependencies
      - install_node_dependencies
      - save_node_dependencies
  bundle_dependencies:
    executor: default
    steps:
      - restore_source_code
      - restore_bundle_dependencies
      - install_bundler
      - install_bundle_dependencies
      - save_bundle_dependencies
  build_frontend_code:
    executor: default
    steps:
      - restore_source_code
      - copy_application_yml
      - restore_bundle_dependencies
      - install_bundler
      - restore_node_dependencies
      - build_frontend
  rubocop_job:
    executor: default
    steps:
      - restore_source_code
      - restore_bundle_dependencies
      - install_bundler
      - run_rubocop
  eslint_job:
    executor: default
    steps:
      - restore_source_code
      - restore_node_dependencies
      - run_eslint
  jest_job:
    executor: default
    steps:
      - restore_source_code
      - restore_node_dependencies
      - run_jest
  e2e_job:
    executor: extended
    steps:
      - restore_source_code
      - restore_node_dependencies
      - install_node_dependencies
      - copy_application_yml
      - restore_bundle_dependencies
      - install_bundler
      - wait_for_db_start_up
      - set_up_database
      - generate_data
      - startup_localhost
      - wait_for_localhost_start_up
      - run_e2e
  rspec_job:
    executor: extended
    steps:
      - restore_source_code
      - restore_bundle_dependencies
      - install_bundler
      - wait_for_db_start_up
      - set_up_database
      - copy_application_yml
      - run_rspec
      # see: https://circleci.com/docs/2.0/code-coverage/
      # You can check the code coverage at coverage/index.html on ARTIFACTS of this job on CircleCI.
      - store_artifacts:
          path: coverage
  request_test:
    executor: extended
    steps:
      - restore_source_code
      - restore_node_dependencies
      - install_node_dependencies
      - copy_application_yml
      - restore_bundle_dependencies
      - install_bundler
      - wait_for_db_start_up
      - set_up_database
      - generate_data
      - startup_localhost
      - wait_for_localhost_start_up
      - run:
          name: Decode POSTMAN_ENV
          command: echo $POSTMAN_ENV | base64 --decode > config/postman_environment.json
      - run_newman
  deploy:
    executor: default
    parameters:
      env:
        type: enum
        enum: ['dtr', 'production']
    steps:
      - restore_source_code
      - restore_bundle_dependencies
      - install_bundler
      - add_ssh_keys:
          fingerprints: 03:d0:c6:13:39:f1:7f:0c:8d:b5:f5:10:e5:00:cf:69
      - run:
          name: Deploy to << parameters.env >>
          command: bundle exec cap << parameters.env >> deploy
      - slack/status:
          mentions: channel

workflows:
  build_test_and_deploy:
    jobs:
      - checkout_code
      - node_dependencies:
          requires:
            - checkout_code
      - bundle_dependencies:
          requires:
            - checkout_code
      - rubocop_job:
          requires:
            - bundle_dependencies
      - eslint_job:
          requires:
            - node_dependencies
      - jest_job:
          requires:
            - node_dependencies
      - e2e_job:
          requires:
            - node_dependencies
      - rspec_job:
          requires:
            - bundle_dependencies
      - build_frontend_code:
          requires:
            - bundle_dependencies
            - node_dependencies
      - request_test:
          requires:
            - node_dependencies
      - deploy:
          name: Deploy to dtr
          env: dtr
          requires:
            # - rubocop_job
            - eslint_job
            - jest_job
            - e2e_job
            - rspec_job
          filters:
            branches:
              only: develop
      # NOTE: Commented out at this moment because the deploy is being done manually after merging develop into master directly.
      # - deploy_to_production:
      #     name: Deploy to production
      #     env: production
      #     requires:
      #       # - rubocop_job
      #       - eslint_job
      #       - jest_job
      #       - rspec_job
      #     filters:
      #       branches:
      #         only: master
